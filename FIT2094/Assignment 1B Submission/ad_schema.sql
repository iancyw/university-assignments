--student id: 30612616
--student name: Ian WONG
-- Capture run of script in file called ad_schema_output.txt
set echo on
SPOOL ad_schema_output.txt
-- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
--   at:        2021-04-26 17:28:43 AEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



DROP TABLE clinic CASCADE CONSTRAINTS;

DROP TABLE drug CASCADE CONSTRAINTS;

DROP TABLE drug_line CASCADE CONSTRAINTS;

DROP TABLE invoice CASCADE CONSTRAINTS;

DROP TABLE owner CASCADE CONSTRAINTS;

DROP TABLE pet CASCADE CONSTRAINTS;

DROP TABLE pet_type CASCADE CONSTRAINTS;

DROP TABLE prescription CASCADE CONSTRAINTS;

DROP TABLE service CASCADE CONSTRAINTS;

DROP TABLE service_line CASCADE CONSTRAINTS;

DROP TABLE specialisation CASCADE CONSTRAINTS;

DROP TABLE vet CASCADE CONSTRAINTS;

DROP TABLE visit CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE clinic (
    clinic_id       NUMBER(7) NOT NULL,
    clinic_name     VARCHAR2(50) NOT NULL,
    clinic_address  VARCHAR2(50) NOT NULL,
    clinic_phone    VARCHAR2(10) NOT NULL
);

COMMENT ON COLUMN clinic.clinic_id IS
    'Clinic''s ID';

COMMENT ON COLUMN clinic.clinic_name IS
    'Clinic''s name';

COMMENT ON COLUMN clinic.clinic_address IS
    'Clinic''s Address';

COMMENT ON COLUMN clinic.clinic_phone IS
    'Clinic''s phone number';

ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

CREATE TABLE drug (
    drug_id             NUMBER(7) NOT NULL,
    drug_name           VARCHAR2(50) NOT NULL,
    drug_instruction    VARCHAR2(50) NOT NULL,
    drug_standard_cost  NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN drug.drug_id IS
    'Drug''s ID';

COMMENT ON COLUMN drug.drug_name IS
    'Drug''s name';

COMMENT ON COLUMN drug.drug_instruction IS
    'Drug''s instruction';

COMMENT ON COLUMN drug.drug_standard_cost IS
    'Standard cost of 1 unit of the drug';

ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

CREATE TABLE drug_line (
    invoice_invoice_id         NUMBER(7) NOT NULL,
    prescription_drug_drug_id  NUMBER(7) NOT NULL,
    prescription_visit_id      NUMBER(7),
    dl_qty                     NUMBER(4) NOT NULL,
    dl_cost_change             NUMBER(6, 2) NOT NULL,
    dl_cost                    NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN drug_line.invoice_invoice_id IS
    'Invoice''s ID';

COMMENT ON COLUMN drug_line.prescription_drug_drug_id IS
    'Drug''s ID';

COMMENT ON COLUMN drug_line.prescription_visit_id IS
    'Visit ID';

COMMENT ON COLUMN drug_line.dl_qty IS
    'Drug line quantity';

COMMENT ON COLUMN drug_line.dl_cost_change IS
    'Drug line quantity';

COMMENT ON COLUMN drug_line.dl_cost IS
    'Drug line cost';

CREATE UNIQUE INDEX drug_line__idx ON
    drug_line (
        prescription_visit_id
    ASC,
        prescription_drug_drug_id
    ASC );

ALTER TABLE drug_line ADD CONSTRAINT drug_line_pk PRIMARY KEY ( invoice_invoice_id,
                                                                prescription_drug_drug_id );

CREATE TABLE invoice (
    invoice_id            NUMBER(7) NOT NULL,
    visit_visit_id        NUMBER(7) NOT NULL,
    invoice_cost          NUMBER(6, 2) NOT NULL,
    invoice_payment_type  CHAR(1) NOT NULL
);

ALTER TABLE invoice
    ADD CHECK ( invoice_payment_type IN ( 'C', 'E' ) );

COMMENT ON COLUMN invoice.invoice_id IS
    'Invoice''s ID';

COMMENT ON COLUMN invoice.visit_visit_id IS
    'Visit ID';

COMMENT ON COLUMN invoice.invoice_cost IS
    'Total cost of invoice';

COMMENT ON COLUMN invoice.invoice_payment_type IS
    'How payment was made, C = Cash | E = EFT';

ALTER TABLE invoice ADD CONSTRAINT invoice_pk PRIMARY KEY ( invoice_id );

ALTER TABLE invoice ADD CONSTRAINT invoice_nk UNIQUE ( visit_visit_id );

CREATE TABLE owner (
    owner_id        NUMBER(7) NOT NULL,
    owner_givname   VARCHAR2(50) NOT NULL,
    owner_famname   VARCHAR2(50) NOT NULL,
    owner_street    VARCHAR2(50) NOT NULL,
    owner_town      VARCHAR2(50) NOT NULL,
    owner_postcode  VARCHAR2(4) NOT NULL,
    vet_vet_id      NUMBER(7) NOT NULL
);

COMMENT ON COLUMN owner.owner_id IS
    'Owner''s ID';

COMMENT ON COLUMN owner.owner_givname IS
    'Owner''s given name';

COMMENT ON COLUMN owner.owner_famname IS
    'Owner''s family name';

COMMENT ON COLUMN owner.owner_street IS
    'Owner''s street name';

COMMENT ON COLUMN owner.owner_town IS
    'Owner''s town';

COMMENT ON COLUMN owner.owner_postcode IS
    'Owner''s postcode';

COMMENT ON COLUMN owner.vet_vet_id IS
    'Vet''s ID';

ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

CREATE TABLE pet (
    pet_id                NUMBER(7) NOT NULL,
    owner_owner_id        NUMBER(7) NOT NULL,
    pet_type_pet_type_id  NUMBER(7) NOT NULL,
    pet_name              VARCHAR2(50) NOT NULL,
    pet_gender            CHAR(1) NOT NULL,
    pet_birthdate         DATE NOT NULL,
    pet_deceased          CHAR(1) NOT NULL
);

ALTER TABLE pet
    ADD CONSTRAINT chk_petgender CHECK ( pet_gender IN ( 'F', 'M' ) );

ALTER TABLE pet
    ADD CONSTRAINT chk_petdeceased CHECK ( pet_deceased IN ( 'N', 'Y' ) );

COMMENT ON COLUMN pet.pet_id IS
    'Pet''s ID';

COMMENT ON COLUMN pet.owner_owner_id IS
    'Owner''s ID';

COMMENT ON COLUMN pet.pet_type_pet_type_id IS
    'Pet type ID';

COMMENT ON COLUMN pet.pet_name IS
    'Pet''s name';

COMMENT ON COLUMN pet.pet_gender IS
    'Pet''s gender, M = Male | F = Female';

COMMENT ON COLUMN pet.pet_birthdate IS
    'Pet''s birthdate';

COMMENT ON COLUMN pet.pet_deceased IS
    'Pet''s deceased status, Y = Yes | N = No';

ALTER TABLE pet ADD CONSTRAINT pet_pk PRIMARY KEY ( pet_id );

CREATE TABLE pet_type (
    pet_type_id    NUMBER(7) NOT NULL,
    pet_type_desc  VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN pet_type.pet_type_id IS
    'Pet type ID';

COMMENT ON COLUMN pet_type.pet_type_desc IS
    'Pet type description';

ALTER TABLE pet_type ADD CONSTRAINT pet_type_pk PRIMARY KEY ( pet_type_id );

CREATE TABLE prescription (
    visit_visit_id          NUMBER(7) NOT NULL,
    drug_drug_id            NUMBER(7) NOT NULL,
    prescription_dose       VARCHAR2(50) NOT NULL,
    prescription_frequency  VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN prescription.visit_visit_id IS
    'Visit ID';

COMMENT ON COLUMN prescription.drug_drug_id IS
    'Drug''s ID';

COMMENT ON COLUMN prescription.prescription_dose IS
    'prescribed drug dose';

COMMENT ON COLUMN prescription.prescription_frequency IS
    'prescribed drug frequency';

ALTER TABLE prescription ADD CONSTRAINT prescription_pk PRIMARY KEY ( visit_visit_id,
                                                                      drug_drug_id );

CREATE TABLE service (
    service_id             NUMBER(7) NOT NULL,
    service_desc           VARCHAR2(50) NOT NULL,
    service_standard_cost  NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN service.service_id IS
    'Service ID';

COMMENT ON COLUMN service.service_desc IS
    'Service description';

COMMENT ON COLUMN service.service_standard_cost IS
    'Standard cost of the service';

ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( service_id );

CREATE TABLE service_line (
    invoice_invoice_id  NUMBER(7) NOT NULL,
    service_service_id  NUMBER(7) NOT NULL,
    sl_cost_change      NUMBER(6, 2),
    sl_cost             NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN service_line.invoice_invoice_id IS
    'Invoice''s ID';

COMMENT ON COLUMN service_line.service_service_id IS
    'Service ID';

COMMENT ON COLUMN service_line.sl_cost_change IS
    'Change in service cost (subect to vet)';

COMMENT ON COLUMN service_line.sl_cost IS
    'Service line cost';

ALTER TABLE service_line ADD CONSTRAINT service_line_pk PRIMARY KEY ( service_service_id,
                                                                      invoice_invoice_id );

CREATE TABLE specialisation (
    specialisation_id    NUMBER(7) NOT NULL,
    specialisation_desc  unknown 
/*  ERROR: Datatype UNKNOWN is not allowed */
     NOT NULL
);

COMMENT ON COLUMN specialisation.specialisation_id IS
    'Specialisation ID';

COMMENT ON COLUMN specialisation.specialisation_desc IS
    'Specialisation description';

ALTER TABLE specialisation ADD CONSTRAINT specialisation_pk PRIMARY KEY ( specialisation_id );

CREATE TABLE vet (
    vet_id                            NUMBER(7) NOT NULL,
    clinic_clinic_id                  NUMBER(7) NOT NULL,
    vet_givname                       VARCHAR2(50) NOT NULL,
    vet_famname                       VARCHAR2(50) NOT NULL,
    vet_phone                         VARCHAR2(10) NOT NULL,
    vet_employdate                    DATE NOT NULL, 
/*  ERROR: Column name length exceeds maximum allowed length(30) */
    specialisation_specialisation_id  NUMBER(7),
    specialist_visit_count            NUMBER(5)
);

COMMENT ON COLUMN vet.vet_id IS
    'Vet''s ID';

COMMENT ON COLUMN vet.clinic_clinic_id IS
    'Clinic''s ID';

COMMENT ON COLUMN vet.vet_givname IS
    'Vet''s given name';

COMMENT ON COLUMN vet.vet_famname IS
    'Vet''s family name';

COMMENT ON COLUMN vet.vet_phone IS
    'Vet''s phone number';

COMMENT ON COLUMN vet.vet_employdate IS
    'Vet''s employment date';

COMMENT ON COLUMN vet.specialisation_specialisation_id IS
    'Specialisation ID';

COMMENT ON COLUMN vet.specialist_visit_count IS
    'how many times a specialist vet has serviced a visit that is not their home clinic';

ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

CREATE TABLE visit (
    visit_id          NUMBER(7) NOT NULL,
    vet_vet_id        NUMBER(7) NOT NULL,
    visit_datetime    DATE NOT NULL,
    clinic_clinic_id  NUMBER(7) NOT NULL,
    pet_pet_id        NUMBER(7) NOT NULL,
    visit_length      VARCHAR2(10) NOT NULL,
    visit_notes       VARCHAR2(50),
    visit_visit_id    NUMBER(7)
);

COMMENT ON COLUMN visit.visit_id IS
    'Visit ID';

COMMENT ON COLUMN visit.vet_vet_id IS
    'Vet''s ID';

COMMENT ON COLUMN visit.visit_datetime IS
    'Visit''s date and time';

COMMENT ON COLUMN visit.clinic_clinic_id IS
    'Clinic''s ID';

COMMENT ON COLUMN visit.pet_pet_id IS
    'Pet''s ID';

COMMENT ON COLUMN visit.visit_length IS
    'Length of visit';

COMMENT ON COLUMN visit.visit_notes IS
    'Notes about the visit (if any)';

COMMENT ON COLUMN visit.visit_visit_id IS
    'Visit ID';

ALTER TABLE visit ADD CONSTRAINT visit_pk PRIMARY KEY ( visit_id );

ALTER TABLE visit ADD CONSTRAINT visit_nk UNIQUE ( vet_vet_id,
                                                   visit_datetime );

ALTER TABLE visit
    ADD CONSTRAINT clinic_visit FOREIGN KEY ( clinic_clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE prescription
    ADD CONSTRAINT drug_prescription FOREIGN KEY ( drug_drug_id )
        REFERENCES drug ( drug_id );

ALTER TABLE visit
    ADD CONSTRAINT followup_visit FOREIGN KEY ( visit_visit_id )
        REFERENCES visit ( visit_id );

ALTER TABLE drug_line
    ADD CONSTRAINT invoice_drugline FOREIGN KEY ( invoice_invoice_id )
        REFERENCES invoice ( invoice_id );

ALTER TABLE service_line
    ADD CONSTRAINT invoice_serviceline FOREIGN KEY ( invoice_invoice_id )
        REFERENCES invoice ( invoice_id );

ALTER TABLE pet
    ADD CONSTRAINT owner_pet FOREIGN KEY ( owner_owner_id )
        REFERENCES owner ( owner_id );

ALTER TABLE owner
    ADD CONSTRAINT owner_preferredvet FOREIGN KEY ( vet_vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE pet
    ADD CONSTRAINT pet_pettype FOREIGN KEY ( pet_type_pet_type_id )
        REFERENCES pet_type ( pet_type_id );

ALTER TABLE visit
    ADD CONSTRAINT pet_visit FOREIGN KEY ( pet_pet_id )
        REFERENCES pet ( pet_id );

ALTER TABLE drug_line
    ADD CONSTRAINT prescription_drugline FOREIGN KEY ( prescription_visit_id,
                                                       prescription_drug_drug_id )
        REFERENCES prescription ( visit_visit_id,
                                  drug_drug_id );

ALTER TABLE service_line
    ADD CONSTRAINT service_sl FOREIGN KEY ( service_service_id )
        REFERENCES service ( service_id );

ALTER TABLE vet
    ADD CONSTRAINT vet_clinic FOREIGN KEY ( clinic_clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE vet
    ADD CONSTRAINT vet_specialisation FOREIGN KEY ( specialisation_specialisation_id )
        REFERENCES specialisation ( specialisation_id );

ALTER TABLE visit
    ADD CONSTRAINT vet_visit FOREIGN KEY ( vet_vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE invoice
    ADD CONSTRAINT visit_invoice FOREIGN KEY ( visit_visit_id )
        REFERENCES visit ( visit_id );

ALTER TABLE prescription
    ADD CONSTRAINT visit_prescription FOREIGN KEY ( visit_visit_id )
        REFERENCES visit ( visit_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             1
-- ALTER TABLE                             34
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   2
-- WARNINGS                                 0
SPOOL off
set echo off