SQL> -- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
SQL> --   at:        2021-04-26 17:28:43 AEST
SQL> --   site:      Oracle Database 11g
SQL> --   type:      Oracle Database 11g
SQL> 
SQL> 
SQL> 
SQL> DROP TABLE clinic CASCADE CONSTRAINTS;

Table CLINIC dropped.

SQL> 
SQL> DROP TABLE drug CASCADE CONSTRAINTS;

Table DRUG dropped.

SQL> 
SQL> DROP TABLE drug_line CASCADE CONSTRAINTS;

Table DRUG_LINE dropped.

SQL> 
SQL> DROP TABLE invoice CASCADE CONSTRAINTS;

Table INVOICE dropped.

SQL> 
SQL> DROP TABLE owner CASCADE CONSTRAINTS;

Table OWNER dropped.

SQL> 
SQL> DROP TABLE pet CASCADE CONSTRAINTS;

Table PET dropped.

SQL> 
SQL> DROP TABLE pet_type CASCADE CONSTRAINTS;

Table PET_TYPE dropped.

SQL> 
SQL> DROP TABLE prescription CASCADE CONSTRAINTS;

Table PRESCRIPTION dropped.

SQL> 
SQL> DROP TABLE service CASCADE CONSTRAINTS;

Table SERVICE dropped.

SQL> 
SQL> DROP TABLE service_line CASCADE CONSTRAINTS;

Table SERVICE_LINE dropped.

SQL> 
SQL> DROP TABLE specialisation CASCADE CONSTRAINTS;

Error starting at line : 33 in command -
DROP TABLE specialisation CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE vet CASCADE CONSTRAINTS;

Table VET dropped.

SQL> 
SQL> DROP TABLE visit CASCADE CONSTRAINTS;

Table VISIT dropped.

SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE clinic (
  2      clinic_id       NUMBER(7) NOT NULL,
  3      clinic_name     VARCHAR2(50) NOT NULL,
  4      clinic_address  VARCHAR2(50) NOT NULL,
  5      clinic_phone    VARCHAR2(10) NOT NULL
  6  );

Table CLINIC created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_id IS
  2      'Clinic''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_name IS
  2      'Clinic''s name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_address IS
  2      'Clinic''s Address';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_phone IS
  2      'Clinic''s phone number';

Comment created.

SQL> 
SQL> ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

Table CLINIC altered.

SQL> 
SQL> CREATE TABLE drug (
  2      drug_id             NUMBER(7) NOT NULL,
  3      drug_name           VARCHAR2(50) NOT NULL,
  4      drug_instruction    VARCHAR2(50) NOT NULL,
  5      drug_standard_cost  NUMBER(6, 2) NOT NULL
  6  );

Table DRUG created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_id IS
  2      'Drug''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_name IS
  2      'Drug''s name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_instruction IS
  2      'Drug''s instruction';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_standard_cost IS
  2      'Standard cost of 1 unit of the drug';

Comment created.

SQL> 
SQL> ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

Table DRUG altered.

SQL> 
SQL> CREATE TABLE drug_line (
  2      invoice_invoice_id         NUMBER(7) NOT NULL,
  3      prescription_drug_drug_id  NUMBER(7) NOT NULL,
  4      prescription_visit_id      NUMBER(7),
  5      dl_qty                     NUMBER(4) NOT NULL,
  6      dl_cost_change             NUMBER(6, 2) NOT NULL,
  7      dl_cost                    NUMBER(6, 2) NOT NULL
  8  );

Table DRUG_LINE created.

SQL> 
SQL> COMMENT ON COLUMN drug_line.invoice_invoice_id IS
  2      'Invoice''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug_line.prescription_drug_drug_id IS
  2      'Drug''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug_line.prescription_visit_id IS
  2      'Visit ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug_line.dl_qty IS
  2      'Drug line quantity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug_line.dl_cost_change IS
  2      'Drug line quantity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug_line.dl_cost IS
  2      'Drug line cost';

Comment created.

SQL> 
SQL> CREATE UNIQUE INDEX drug_line__idx ON
  2      drug_line (
  3          prescription_visit_id
  4      ASC,
  5          prescription_drug_drug_id
  6      ASC );

INDEX DRUG_LINE__IDX created.

SQL> 
SQL> ALTER TABLE drug_line ADD CONSTRAINT drug_line_pk PRIMARY KEY ( invoice_invoice_id,
  2                                                                  prescription_drug_drug_id );

Table DRUG_LINE altered.

SQL> 
SQL> CREATE TABLE invoice (
  2      invoice_id            NUMBER(7) NOT NULL,
  3      visit_visit_id        NUMBER(7) NOT NULL,
  4      invoice_cost          NUMBER(6, 2) NOT NULL,
  5      invoice_payment_type  CHAR(1) NOT NULL
  6  );

Table INVOICE created.

SQL> 
SQL> ALTER TABLE invoice
  2      ADD CHECK ( invoice_payment_type IN ( 'C', 'E' ) );

Table INVOICE altered.

SQL> 
SQL> COMMENT ON COLUMN invoice.invoice_id IS
  2      'Invoice''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN invoice.visit_visit_id IS
  2      'Visit ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN invoice.invoice_cost IS
  2      'Total cost of invoice';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN invoice.invoice_payment_type IS
  2      'How payment was made, C = Cash | E = EFT';

Comment created.

SQL> 
SQL> ALTER TABLE invoice ADD CONSTRAINT invoice_pk PRIMARY KEY ( invoice_id );

Table INVOICE altered.

SQL> 
SQL> ALTER TABLE invoice ADD CONSTRAINT invoice_nk UNIQUE ( visit_visit_id );

Table INVOICE altered.

SQL> 
SQL> CREATE TABLE owner (
  2      owner_id        NUMBER(7) NOT NULL,
  3      owner_givname   VARCHAR2(50) NOT NULL,
  4      owner_famname   VARCHAR2(50) NOT NULL,
  5      owner_street    VARCHAR2(50) NOT NULL,
  6      owner_town      VARCHAR2(50) NOT NULL,
  7      owner_postcode  VARCHAR2(4) NOT NULL,
  8      vet_vet_id      NUMBER(7) NOT NULL
  9  );

Table OWNER created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_id IS
  2      'Owner''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_givname IS
  2      'Owner''s given name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_famname IS
  2      'Owner''s family name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_street IS
  2      'Owner''s street name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_town IS
  2      'Owner''s town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_postcode IS
  2      'Owner''s postcode';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.vet_vet_id IS
  2      'Vet''s ID';

Comment created.

SQL> 
SQL> ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

Table OWNER altered.

SQL> 
SQL> CREATE TABLE pet (
  2      pet_id                NUMBER(7) NOT NULL,
  3      owner_owner_id        NUMBER(7) NOT NULL,
  4      pet_type_pet_type_id  NUMBER(7) NOT NULL,
  5      pet_name              VARCHAR2(50) NOT NULL,
  6      pet_gender            CHAR(1) NOT NULL,
  7      pet_birthdate         DATE NOT NULL,
  8      pet_deceased          CHAR(1) NOT NULL
  9  );

Table PET created.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CONSTRAINT chk_petgender CHECK ( pet_gender IN ( 'F', 'M' ) );

Table PET altered.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CONSTRAINT chk_petdeceased CHECK ( pet_deceased IN ( 'N', 'Y' ) );

Table PET altered.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_id IS
  2      'Pet''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.owner_owner_id IS
  2      'Owner''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_type_pet_type_id IS
  2      'Pet type ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_name IS
  2      'Pet''s name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_gender IS
  2      'Pet''s gender, M = Male | F = Female';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_birthdate IS
  2      'Pet''s birthdate';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_deceased IS
  2      'Pet''s deceased status, Y = Yes | N = No';

Comment created.

SQL> 
SQL> ALTER TABLE pet ADD CONSTRAINT pet_pk PRIMARY KEY ( pet_id );

Table PET altered.

SQL> 
SQL> CREATE TABLE pet_type (
  2      pet_type_id    NUMBER(7) NOT NULL,
  3      pet_type_desc  VARCHAR2(50) NOT NULL
  4  );

Table PET_TYPE created.

SQL> 
SQL> COMMENT ON COLUMN pet_type.pet_type_id IS
  2      'Pet type ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet_type.pet_type_desc IS
  2      'Pet type description';

Comment created.

SQL> 
SQL> ALTER TABLE pet_type ADD CONSTRAINT pet_type_pk PRIMARY KEY ( pet_type_id );

Table PET_TYPE altered.

SQL> 
SQL> CREATE TABLE prescription (
  2      visit_visit_id          NUMBER(7) NOT NULL,
  3      drug_drug_id            NUMBER(7) NOT NULL,
  4      prescription_dose       VARCHAR2(50) NOT NULL,
  5      prescription_frequency  VARCHAR2(50) NOT NULL
  6  );

Table PRESCRIPTION created.

SQL> 
SQL> COMMENT ON COLUMN prescription.visit_visit_id IS
  2      'Visit ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescription.drug_drug_id IS
  2      'Drug''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescription.prescription_dose IS
  2      'prescribed drug dose';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescription.prescription_frequency IS
  2      'prescribed drug frequency';

Comment created.

SQL> 
SQL> ALTER TABLE prescription ADD CONSTRAINT prescription_pk PRIMARY KEY ( visit_visit_id,
  2                                                                        drug_drug_id );

Table PRESCRIPTION altered.

SQL> 
SQL> CREATE TABLE service (
  2      service_id             NUMBER(7) NOT NULL,
  3      service_desc           VARCHAR2(50) NOT NULL,
  4      service_standard_cost  NUMBER(6, 2) NOT NULL
  5  );

Table SERVICE created.

SQL> 
SQL> COMMENT ON COLUMN service.service_id IS
  2      'Service ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service.service_desc IS
  2      'Service description';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service.service_standard_cost IS
  2      'Standard cost of the service';

Comment created.

SQL> 
SQL> ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( service_id );

Table SERVICE altered.

SQL> 
SQL> CREATE TABLE service_line (
  2      invoice_invoice_id  NUMBER(7) NOT NULL,
  3      service_service_id  NUMBER(7) NOT NULL,
  4      sl_cost_change      NUMBER(6, 2),
  5      sl_cost             NUMBER(6, 2) NOT NULL
  6  );

Table SERVICE_LINE created.

SQL> 
SQL> COMMENT ON COLUMN service_line.invoice_invoice_id IS
  2      'Invoice''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service_line.service_service_id IS
  2      'Service ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service_line.sl_cost_change IS
  2      'Change in service cost (subect to vet)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service_line.sl_cost IS
  2      'Service line cost';

Comment created.

SQL> 
SQL> ALTER TABLE service_line ADD CONSTRAINT service_line_pk PRIMARY KEY ( service_service_id,
  2                                                                        invoice_invoice_id );

Table SERVICE_LINE altered.

SQL> 
SQL> CREATE TABLE specialisation (
  2      specialisation_id    NUMBER(7) NOT NULL,
  3      specialisation_desc  unknown 
  4  /*  ERROR: Datatype UNKNOWN is not allowed */
  5       NOT NULL
  6  );

Error starting at line : 294 in command -
CREATE TABLE specialisation (
    specialisation_id    NUMBER(7) NOT NULL,
    specialisation_desc  unknown 
/*  ERROR: Datatype UNKNOWN is not allowed */
     NOT NULL
)
Error report -
ORA-00902: invalid datatype
00902. 00000 -  "invalid datatype"
*Cause:    
*Action:
SQL> 
SQL> COMMENT ON COLUMN specialisation.specialisation_id IS
  2      'Specialisation ID';

Error starting at line : 301 in command -
COMMENT ON COLUMN specialisation.specialisation_id IS
    'Specialisation ID'
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> COMMENT ON COLUMN specialisation.specialisation_desc IS
  2      'Specialisation description';

Error starting at line : 304 in command -
COMMENT ON COLUMN specialisation.specialisation_desc IS
    'Specialisation description'
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> ALTER TABLE specialisation ADD CONSTRAINT specialisation_pk PRIMARY KEY ( specialisation_id );

Error starting at line : 307 in command -
ALTER TABLE specialisation ADD CONSTRAINT specialisation_pk PRIMARY KEY ( specialisation_id )
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> CREATE TABLE vet (
  2      vet_id                            NUMBER(7) NOT NULL,
  3      clinic_clinic_id                  NUMBER(7) NOT NULL,
  4      vet_givname                       VARCHAR2(50) NOT NULL,
  5      vet_famname                       VARCHAR2(50) NOT NULL,
  6      vet_phone                         VARCHAR2(10) NOT NULL,
  7      vet_employdate                    DATE NOT NULL, 
  8  /*  ERROR: Column name length exceeds maximum allowed length(30) */
  9      specialisation_specialisation_id  NUMBER(7),
 10      specialist_visit_count            NUMBER(5)
 11  );

Table VET created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_id IS
  2      'Vet''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.clinic_clinic_id IS
  2      'Clinic''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_givname IS
  2      'Vet''s given name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_famname IS
  2      'Vet''s family name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_phone IS
  2      'Vet''s phone number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_employdate IS
  2      'Vet''s employment date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.specialisation_specialisation_id IS
  2      'Specialisation ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.specialist_visit_count IS
  2      'how many times a specialist vet has serviced a visit that is not their home clinic';

Comment created.

SQL> 
SQL> ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

Table VET altered.

SQL> 
SQL> CREATE TABLE visit (
  2      visit_id          NUMBER(7) NOT NULL,
  3      vet_vet_id        NUMBER(7) NOT NULL,
  4      visit_datetime    DATE NOT NULL,
  5      clinic_clinic_id  NUMBER(7) NOT NULL,
  6      pet_pet_id        NUMBER(7) NOT NULL,
  7      visit_length      VARCHAR2(10) NOT NULL,
  8      visit_notes       VARCHAR2(50),
  9      visit_visit_id    NUMBER(7)
 10  );

Table VISIT created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_id IS
  2      'Visit ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.vet_vet_id IS
  2      'Vet''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_datetime IS
  2      'Visit''s date and time';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.clinic_clinic_id IS
  2      'Clinic''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.pet_pet_id IS
  2      'Pet''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_length IS
  2      'Length of visit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_notes IS
  2      'Notes about the visit (if any)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.visit_visit_id IS
  2      'Visit ID';

Comment created.

SQL> 
SQL> ALTER TABLE visit ADD CONSTRAINT visit_pk PRIMARY KEY ( visit_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE visit ADD CONSTRAINT visit_nk UNIQUE ( vet_vet_id,
  2                                                     visit_datetime );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT clinic_visit FOREIGN KEY ( clinic_clinic_id )
  3          REFERENCES clinic ( clinic_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE prescription
  2      ADD CONSTRAINT drug_prescription FOREIGN KEY ( drug_drug_id )
  3          REFERENCES drug ( drug_id );

Table PRESCRIPTION altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT followup_visit FOREIGN KEY ( visit_visit_id )
  3          REFERENCES visit ( visit_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE drug_line
  2      ADD CONSTRAINT invoice_drugline FOREIGN KEY ( invoice_invoice_id )
  3          REFERENCES invoice ( invoice_id );

Table DRUG_LINE altered.

SQL> 
SQL> ALTER TABLE service_line
  2      ADD CONSTRAINT invoice_serviceline FOREIGN KEY ( invoice_invoice_id )
  3          REFERENCES invoice ( invoice_id );

Table SERVICE_LINE altered.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CONSTRAINT owner_pet FOREIGN KEY ( owner_owner_id )
  3          REFERENCES owner ( owner_id );

Table PET altered.

SQL> 
SQL> ALTER TABLE owner
  2      ADD CONSTRAINT owner_preferredvet FOREIGN KEY ( vet_vet_id )
  3          REFERENCES vet ( vet_id );

Table OWNER altered.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CONSTRAINT pet_pettype FOREIGN KEY ( pet_type_pet_type_id )
  3          REFERENCES pet_type ( pet_type_id );

Table PET altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT pet_visit FOREIGN KEY ( pet_pet_id )
  3          REFERENCES pet ( pet_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE drug_line
  2      ADD CONSTRAINT prescription_drugline FOREIGN KEY ( prescription_visit_id,
  3                                                         prescription_drug_drug_id )
  4          REFERENCES prescription ( visit_visit_id,
  5                                    drug_drug_id );

Table DRUG_LINE altered.

SQL> 
SQL> ALTER TABLE service_line
  2      ADD CONSTRAINT service_sl FOREIGN KEY ( service_service_id )
  3          REFERENCES service ( service_id );

Table SERVICE_LINE altered.

SQL> 
SQL> ALTER TABLE vet
  2      ADD CONSTRAINT vet_clinic FOREIGN KEY ( clinic_clinic_id )
  3          REFERENCES clinic ( clinic_id );

Table VET altered.

SQL> 
SQL> ALTER TABLE vet
  2      ADD CONSTRAINT vet_specialisation FOREIGN KEY ( specialisation_specialisation_id )
  3          REFERENCES specialisation ( specialisation_id );

Error starting at line : 437 in command -
ALTER TABLE vet
    ADD CONSTRAINT vet_specialisation FOREIGN KEY ( specialisation_specialisation_id )
        REFERENCES specialisation ( specialisation_id )
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT vet_visit FOREIGN KEY ( vet_vet_id )
  3          REFERENCES vet ( vet_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE invoice
  2      ADD CONSTRAINT visit_invoice FOREIGN KEY ( visit_visit_id )
  3          REFERENCES visit ( visit_id );

Table INVOICE altered.

SQL> 
SQL> ALTER TABLE prescription
  2      ADD CONSTRAINT visit_prescription FOREIGN KEY ( visit_visit_id )
  3          REFERENCES visit ( visit_id );

Table PRESCRIPTION altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            13
SQL> -- CREATE INDEX                             1
SQL> -- ALTER TABLE                             34
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   2
SQL> -- WARNINGS                                 0
SQL> SPOOL off
